name: GitOps Deployment Handler

# This workflow runs in your GitOps repository and gets triggered by repository dispatch
on:
  repository_dispatch:
    types: [deploy-service]

env:
  SERVICE: ${{ github.event.client_payload.service }}
  VERSION: ${{ github.event.client_payload.version }}
  IMAGE: ${{ github.event.client_payload.image }}
  TRIGGERED_BY: ${{ github.event.client_payload.triggered_by }}

jobs:
  update-deployment:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout GitOps repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Display deployment info
        run: |
          echo "🚀 Received deployment request!"
          echo "📦 Service: ${{ env.SERVICE }}"
          echo "🏷️  Version: ${{ env.VERSION }}"
          echo "🖼️  Image: ${{ env.IMAGE }}"
          echo "👤 Triggered by: ${{ env.TRIGGERED_BY }}"
          echo "🔗 Source run: https://github.com/${{ github.event.client_payload.source_repo }}/actions/runs/${{ github.event.client_payload.source_run_id }}"
      
      - name: Create deployment directory
        run: |
          mkdir -p deployments/${{ env.SERVICE }}
      
      - name: Generate deployment manifest
        run: |
          cat > deployments/${{ env.SERVICE }}/deployment.yaml << EOF
          # Generated by GitOps automation
          # Triggered by: ${{ env.TRIGGERED_BY }}
          # Source: ${{ github.event.client_payload.source_repo }}
          # Build run: ${{ github.event.client_payload.source_run_id }}
          # Generated: $(date -u +"%Y-%m-%dT%H:%M:%SZ")
          
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: craftista-${{ env.SERVICE }}
            namespace: default
            labels:
              app: craftista-${{ env.SERVICE }}
              version: "${{ env.VERSION }}"
              managed-by: "gitops-automation"
            annotations:
              deployment.kubernetes.io/revision: "${{ env.VERSION }}"
              gitops.io/triggered-by: "${{ env.TRIGGERED_BY }}"
              gitops.io/image-digest: "${{ github.event.client_payload.digest }}"
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: craftista-${{ env.SERVICE }}
            template:
              metadata:
                labels:
                  app: craftista-${{ env.SERVICE }}
                  version: "${{ env.VERSION }}"
              spec:
                containers:
                - name: ${{ env.SERVICE }}
                  image: ${{ env.IMAGE }}
                  ports:
                  - containerPort: 8080
                    name: http
                  resources:
                    requests:
                      memory: "128Mi"
                      cpu: "100m"
                    limits:
                      memory: "512Mi"
                      cpu: "500m"
                  # Health checks
                  livenessProbe:
                    httpGet:
                      path: /health
                      port: 8080
                    initialDelaySeconds: 30
                    periodSeconds: 10
                  readinessProbe:
                    httpGet:
                      path: /ready
                      port: 8080
                    initialDelaySeconds: 5
                    periodSeconds: 5
          ---
          apiVersion: v1
          kind: Service
          metadata:
            name: craftista-${{ env.SERVICE }}-service
            labels:
              app: craftista-${{ env.SERVICE }}
          spec:
            type: ClusterIP
            ports:
            - port: 8080
              targetPort: 8080
              protocol: TCP
              name: http
            selector:
              app: craftista-${{ env.SERVICE }}
          EOF
          
          echo "✅ Deployment manifest generated"
      
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "🚀 Deploy ${{ env.SERVICE }} version ${{ env.VERSION }}"
          title: "🚀 Deploy ${{ env.SERVICE }} v${{ env.VERSION }}"
          body: |
            ## 🚀 Automated Deployment
            
            **Service:** `${{ env.SERVICE }}`  
            **Version:** `${{ env.VERSION }}`  
            **Image:** `${{ env.IMAGE }}`  
            **Triggered by:** @${{ env.TRIGGERED_BY }}  
            
            ### 📋 Details
            - **Source Build:** [${{ github.event.client_payload.source_repo }}](https://github.com/${{ github.event.client_payload.source_repo }}/actions/runs/${{ github.event.client_payload.source_run_id }})
            - **Image Digest:** `${{ github.event.client_payload.digest }}`
            - **Deployment File:** `deployments/${{ env.SERVICE }}/deployment.yaml`
            
            ### 🎯 Next Steps
            1. **Review** the deployment manifest
            2. **Merge** this PR to update the GitOps configuration
            3. **Apply** to your Kubernetes cluster:
               ```bash
               kubectl apply -f deployments/${{ env.SERVICE }}/deployment.yaml
               ```
            
            ### 🔍 What Changed
            - Updated deployment manifest for `${{ env.SERVICE }}`
            - Set image to `${{ env.IMAGE }}`
            - Added proper labels and annotations for tracking
            
            ---
            *🤖 This PR was created automatically by GitOps automation*
          branch: deploy/${{ env.SERVICE }}-${{ env.VERSION }}
          delete-branch: true
      
      - name: Deployment summary
        run: |
          echo "## ✅ GitOps Deployment Complete"
          echo ""
          echo "**Service:** ${{ env.SERVICE }}"
          echo "**Version:** ${{ env.VERSION }}"
          echo "**Action:** Pull Request created for review"
          echo ""
          echo "🎉 The deployment is now ready for review and merge!"